left = '((9)*(((((((((2)*(((5)*((3)*(((((((2)*((4)+((((2)*(13))-(3))+(10))))/(2))+(((2)*((3)*((3)+(4))))+((((2)*(((3)*(4))+(((3)*((2)*((3)+(3))))-(1))))+(3))*(2))))+(((14)+(((((8)*(2))+(13))-(1))+(1)))*(2)))+((5)*((10)*(3))))+((((((3)*(5))+((1)+(7)))+(6))*(((5)+(4))+(4)))+(((((2)+((3)*((13)-(2))))+(6))*(3))*((3)*(13)))))))+(((((5)+(15))+((9)*(3)))+((5)*((3)*(3))))*(((4)*((4)+(3)))+((11)+(2))))))*(2))+(((((2)*((2)*(10)))+(((8)+(3))+(14)))+((((14)*(8))/(2))+(((((((12)+((7)*(5)))+((5)*(5)))/(2))+(8))-(13))+((3)+((4)*(2))))))*((((1)+(10))+(((11)+(2))*(2)))*(((((1)+((13)*(4)))*((2)*((2)*(3))))-((((((8)+(((((7)+((5)+(1)))-(1))+(12))+((6)+((((7)*(2))+((3)*(5)))-(6)))))*(2))/(2))+(((7)*(9))+(((4)*(4))+(3))))+((2)*(((((6)+(11))+((((6)+(1))*(2))/(2)))+((3)+(4)))-(2)))))+(((7)*(2))*((2)*((6)+(1))))))))*(5))*((((((12)*((((((4)*((((((8)+((3)*(3)))*(2))/(2))+((((3)*((((3)*((2)+(5)))+((((2)*(((((5)*(((3)*((3)*(3)))+(1)))+((5)*(15)))/(5))+((3)*((5)*(2)))))*(3))/((2)*(3))))/(2)))+(15))/((3)*(2))))-(4)))-(((((2)*(3))+(7))*(2))+(3)))*(2))*(5))+(((((4)+(3))*((((((15)*(3))+(2))*(4))-(((2)*((2)*(17)))-((((7)*(3))-(7))/(2))))+(((3)*(2))*(5))))*(2))+((2)*((((((10)*((1)+((5)*(5))))/(4))+((((2)*((((((4)*(2))+(16))/(2))+((2)*((7)*(3))))+((5)*(5))))-((2)*((2)*((3)*(2)))))/(2)))+(((15)+(2))*((6)+(((4)*(4))+(1)))))-((2)*((2)*(11))))))))-((((14)+(((((4)*(5))*((6)+(11)))+((6)*((((5)*(2))-(3))*(2))))/((2)*(4))))+(((2)*(((2)*((1)+(10)))+(1)))*((4)+(3))))+((((9)+(1))*(6))*((2)*(((3)*((((3)*((2)*(4)))+((7)*(7)))+((2)*(((1)+((4)+(((3)*(3))*(2))))+((2)*(3))))))/(3))))))*(4))*((2)*((1)+(10))))+(((((((1)+((6)*((1)+(5))))*(((((2)*((13)-(2)))*((3)*(2)))/((2)*(3)))*(5)))+(((15)+(4))*((((((4)+((3)+(3)))*(((4)*((2)*(3)))+(5)))+(((3)*(3))*(3)))*(3))/(3))))*(2))*(20))+((((((((15)*((14)+(17)))+((((2)*(((2)*(((1)+((5)*(2)))*((5)+(2))))+((((((((7)*(14))+((((2)*((3)*(2)))*(2))+(5)))*(2))+((2)*(((6)*((4)*(4)))+((((2)+(5))*(2))-(1)))))+(((((16)*(2))+(1))+(((5)+(3))*((4)*(2))))*((3)*(4))))/(4))-((4)*(15)))))+((3)*(5)))*(2)))+((((2)*((((4)*((5)*(2)))+(((8)*(2))-(3)))+((2)*((4)+(9)))))-((3)*(13)))+((((6)+((8)+((3)*(5))))+(12))*(2))))*(((2)*(12))-((14)/(2))))+(((((14)*(2))+(((4)+(7))+(4)))*(4))*((12)*((18)+((3)*(2))))))*(((3)*(3))+(((5)*(5))*(2))))+(((((11)*(2))-(5))+(((4)+(6))+(16)))*((((3)*(5))*(5))+(((19)*((5)+((3)*(2))))+(((2)*(((11)*(3))-((2)*(5))))/(2)))))))))-(((((5)+((12)*(((2)+(5))+(2))))*(2))+((2)*(((((((((((((((13)-(2))*((2)*(10)))+((2)*(3)))/(2))*(2))+(((3)*((2)+(5)))*((1)+(6))))*(2))+((4)*((((7)*(7))+((3)*(((14)-(1))*(2))))*(2))))/(2))+(((((12)*(18))+(((2)*((((((4)*((((4)*(3))*(3))+((((11)*(2))+((3)*(3)))*(3))))+(((((2)*((((((((((((20)+(17))+((4)+(((17)+(2))*(2))))*(2))+((((((((3)*(2))+(1))*(5))+(2))*(2))+((((7)*(3))+(2))*(2)))+(7)))+((((10)*(19))+(((2)*((((2)*((5)*((((((2)*((3)*(4)))+((((((((2)*(3))+(1))*(3))+((2)+((2)*((5)+(2)))))+(((4)*(2))+((10)+(((18)-((3)*(2)))+(7)))))*(3))/(6)))*(2))*(4))/(8))))/(5))+((((((9)*(((((7)*(((3)*((9)*(3)))+((2)*((5)*(5)))))+(((((4)*(2))+(2))-(3))*((((((2)*(3))*(((2)*(9))+(1)))+(((((2)*(11))+((6)*(5)))+(((((4)+((6)*((((3)*(3))-(2))+(10))))*(2))/(4))*(5)))+((2)*((((((2)*(3))*((((((((((10)*((((((((5)*(4))*(2))+(4))+((((2)*((5)*(3)))+(((((4)+((2)*(5)))+(5))+((4)*(13)))+(2)))*(7)))+((((2)*(3))*(3))*((((x)-((((((16)+(1))*(((9)+(6))+(8)))+(((((3)*(((1)+(6))+(2)))*(2))+(9))*((3)*(5))))/((4)*(2)))*(2)))/(3))+((((5)*(5))+((4)*(4)))*((2)*((4)+(3)))))))/(3))-((((6)+((3)*(5)))+(8))*(((13)+(((2)*(12))/(2)))+(6)))))+((19)*(((2)*(3))+((12)+((((3)*(2))+(2))+(5))))))*(2))-(((((5)*(4))+((((5)*(((((((11)+(15))/(2))+(((13)*(2))+(2)))*(4))/(2))/(2)))/(5))-(2)))*(2))*(4)))/(3))-((((((5)+(2))+(((3)*(2))+(4)))*(13))+((((8)+(15))*(2))*(2)))+((15)*((4)*((1)+((1)+(5)))))))+(((2)*(((3)+(16))+((11)*(2))))*((5)*(2))))/(3))+(((4)+(3))*((4)+(7)))))-(((8)+(((5)*(3))*(4)))*(((2)*(3))+(1))))/(4))+((11)*(((2)*(3))*(6)))))))/(5))-(((9)+(2))*((3)*(9))))))/(7))-(((9)+(2))*(((2)*((13)*(2)))+(1)))))-(((2)*((5)+(6)))*((((4)*(3))-(1))*(3))))*(2))+((((((2)*(7))*(((2)*(5))-(3)))/(2))-((3)*(3)))*(8)))/(2))))-((5)*(((11)*(2))+(1)))))/(3)))/(2))-((13)*((10)*(7))))*(4))+((2)*((((2)+(15))+(12))*(13))))/(2))-((5)*((((2)+((3)*(7)))*(3))+((5)*((((2)*(4))*(4))/(4)))))))+(((((4)+((((3)+(4))*(2))*(2)))-(3))-((3)*(3)))*(((2)*((12)+(((1)+(10))+(6))))/(2))))*(2))-((((5)*(5))+(2))*(((3)*(3))*(3)))))+((5)*(5)))/(3))+((((3)*(5))*(((((((4)*((((5)*(2))*(3))/(5)))-(1))+(2))+((2)*((4)*(4))))+(4))*(3)))/(5))))-((3)*(((3)+(10))*((6)+(1))))))+(((17)*(17))+((((4)*((3)*(3)))*((4)+((4)+((5)*(5)))))/(3))))/(2)))/(3))-((((4)+((((2)+(15))*(2))/(2)))+((2)*(3)))*((16)+(20))))*(4))-((((18)+((3)*(3)))*((((2)*(6))*(4))/(3)))+(((1)+(((2)*((11)+(18)))+((19)+(5))))*(2))))))/(2)))/((3)*(3)))+((((2)*(((5)*((5)+((18)+(((3)+(4))*((4)*(2))))))+((4)*((2)*(3)))))-((7)*(15)))+(((17)*(2))*(6)))))'

right =  '((((((((2)*(((2)*(11))/(2)))/(2))*(2))+(5))*((5)*(5)))*(((((2)*(((2)+((4)*(3)))+(((((((2)*((((3)*(3))*(6))+(((2)*(17))+((13)+((4)+(2))))))+(((2)+((6)+(2)))+((2)*(11))))+((3)*((((((((((2)*(((2)*((4)+(3)))-(3)))*(6))/(2))-(12))+((18)*(14)))+((10)*((2)*(4))))/(2))+((11)*(3)))/(2))))+((13)+(((3)*(3))*(2))))/(4))-(5))))*((2)*(((9)*(3))-(1))))+((19)*((2)*(((((3)+(14))*(2))+((((14)*(2))+(2))+((((((3)+(3))+((2)*((3)*(2))))+(1))+(4))+(20))))+((11)*((2)*(11)))))))/(2)))*((((19)*((((((8)*(4))*((3)*((3)+(4))))-((3)*((2)*((((((3)*(2))+((3)+(8)))*(2))/(2))+((4)+(2))))))/(3))+(((3)*((6)+(1)))*((20)+(1)))))*(((4)+(3))*((11)+((8)*(9)))))+(((2)*(((((2)*((((5)+((9)+(((3)*(3))*(3))))*(2))/(2)))+((15)+(((2)*(((4)*((5)+((2)+(6))))-(5)))+(((((4)*(2))*(2))*(7))/(4)))))*(3))-(((11)*(3))+((((2)*((((((((((9)+(((2)*((2)+(5)))+((((3)*(3))*(3))-(4))))/(2))-(4))*(2))/(2))+((2)*((13)*(2))))+(18))-((18)+((2)+(5))))-((3)*(7))))+((((5)+((4)*(2)))+((((3)*((8)-(1)))+(((7)*((1)+((3)*(2))))*((7)+(4))))/(8)))+((7)*(2))))/(3)))))*((3)*(((3)*((2)*(((2)*((2)+((11)*((1)+(6)))))/(2))))+(((2)*(5))+(((3)*(3))*((1)+((3)+(3))))))))))'


# print('x' in left)
# print(eval(left))
# print(eval(right))
right = int(eval(right))

for x in range(300000, 10000000):
    L = left
    # assert("x" in L)
    # print(str(x))
    L.replace("x", str(x))
    # assert("x" not in L)
    lval = eval(L)
    if lval == right:
        print(x)
        break
    else:
        print("checking: ", x)
